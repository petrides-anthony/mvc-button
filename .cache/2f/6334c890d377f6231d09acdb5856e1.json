{"id":"src/index.js","dependencies":[{"name":"/Users/anthonyp/git/mvc-button/package.json","includedInParent":true,"mtime":1579780511726},{"name":"./PriceButtonController","loc":{"line":1,"column":34},"parent":"/Users/anthonyp/git/mvc-button/src/index.js","resolved":"/Users/anthonyp/git/mvc-button/src/PriceButtonController.js"},{"name":"./PriceButtonView","loc":{"line":2,"column":28},"parent":"/Users/anthonyp/git/mvc-button/src/index.js","resolved":"/Users/anthonyp/git/mvc-button/src/PriceButtonView.js"},{"name":"./styles.css","loc":{"line":4,"column":7},"parent":"/Users/anthonyp/git/mvc-button/src/index.js","resolved":"/Users/anthonyp/git/mvc-button/src/styles.css"}],"generated":{"js":"\"use strict\";\n\nvar _PriceButtonController = _interopRequireDefault(require(\"./PriceButtonController\"));\n\nvar _PriceButtonView = _interopRequireDefault(require(\"./PriceButtonView\"));\n\nrequire(\"./styles.css\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\nAPI data https://5e17a1c9505bb50014720dc6.mockapi.io/pricetestapi/prices\n\n- mount the button in screen with initial state\n- fetch data and calculate the best price\n- render the best price and make the button clickable\n- onclick: show other prices options below\n*/\nnew _PriceButtonController.default(new _PriceButtonView.default()).mount(document.getElementById(\"app\"));"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"src/index.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"src/index.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"src/index.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"src/index.js","original":{"line":15,"column":0}},{"name":"PriceButtonController","generated":{"line":19,"column":4},"source":"src/index.js","original":{"line":15,"column":4}},{"generated":{"line":19,"column":34},"source":"src/index.js","original":{"line":15,"column":0}},{"generated":{"line":19,"column":35},"source":"src/index.js","original":{"line":15,"column":26}},{"name":"PriceButtonView","generated":{"line":19,"column":39},"source":"src/index.js","original":{"line":15,"column":30}},{"generated":{"line":19,"column":63},"source":"src/index.js","original":{"line":15,"column":26}},{"generated":{"line":19,"column":65},"source":"src/index.js","original":{"line":15,"column":0}},{"name":"mount","generated":{"line":19,"column":67},"source":"src/index.js","original":{"line":15,"column":49}},{"generated":{"line":19,"column":72},"source":"src/index.js","original":{"line":15,"column":0}},{"name":"document","generated":{"line":19,"column":73},"source":"src/index.js","original":{"line":16,"column":2}},{"generated":{"line":19,"column":81},"source":"src/index.js","original":{"line":16,"column":10}},{"name":"getElementById","generated":{"line":19,"column":82},"source":"src/index.js","original":{"line":16,"column":11}},{"generated":{"line":19,"column":96},"source":"src/index.js","original":{"line":16,"column":2}},{"generated":{"line":19,"column":97},"source":"src/index.js","original":{"line":16,"column":26}},{"generated":{"line":19,"column":102},"source":"src/index.js","original":{"line":16,"column":2}},{"generated":{"line":19,"column":103},"source":"src/index.js","original":{"line":15,"column":0}}],"sources":{"src/index.js":"import PriceButtonController from \"./PriceButtonController\";\nimport PriceButtonView from \"./PriceButtonView\";\n\nimport \"./styles.css\";\n\n/*\nAPI data https://5e17a1c9505bb50014720dc6.mockapi.io/pricetestapi/prices\n\n- mount the button in screen with initial state\n- fetch data and calculate the best price\n- render the best price and make the button clickable\n- onclick: show other prices options below\n*/\n\nnew PriceButtonController(new PriceButtonView()).mount(\n  document.getElementById(\"app\")\n);\n"},"lineCount":null}},"error":null,"hash":"39066589b78ae1c23b894e84057674f3","cacheData":{"env":{}}}